{"version":3,"sources":["models/FaceExtractor.js","models/TF.js","models/imgUtils.js","models/constants.js","models/Model.js","models/BaseModel.js","util/index.js","constants.js","App.js","serviceWorker.js","index.js"],"names":["MODEL_PATH","concat","process","PARAMS","minFaceSize","scaleFactor","maxNumScales","scoreThresholds","FaceExtractor","path","arguments","length","undefined","params","Object","classCallCheck","this","createClass","key","value","_load","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","model","faceapi","load","stop","apply","_findFaces","_callee2","img","input","results","detections","_context2","sent","forward","map","r","faceDetection","abrupt","_x","_findAndExtractFaces","_callee3","_ref","faces","_context3","findFaces","inputs","_x2","tf","objectSpread","core","layers","NORM_OFFSET","scalar","prepImg","size","imgTensor","fromPixels","normalized","toFloat","sub","div","shape","image","resizeBilinear","rgbToGrayscale","minTensor","maxTensor","min","max","grayscale","data","dispose","mean","expandDims","EMOTION","0","name","emoji","1","2","3","4","5","6","EmotionNet","_Model","possibleConstructorReturn","getPrototypeOf","call","imageSize","classes","isGrayscale","inherits","Model","_ref$isGrayscale","loadModel","inShape","slice","result","tidy","_this","predict","zeros","toConsumableArray","norm","reshape","topK","imgToInputs","logits","getTopKClasses","values","predictionList","i","push","index","sort","b","x","label","_this2","getImg","src","Promise","resolve","Image","crossOrigin","onload","nextFrame","requestAnimationFrame","EmojiToColor","üò†","ü§¢","üò®","üòÑ","üôÅ","üò≤","üòê","drawBox","ctx","y","width","height","strokeStyle","lineWidth","strokeRect","drawText","_ref2","text","fillStyle","font","textBaseline","fillText","MOBILE_DEVICE_WIDTH","App","props","initModels","faceModel","emotionModel","models","face","emotion","setState","ready","initVideo","video","document","createElement","autoplay","playsinline","style","display","initCanvas","canvas","querySelector","startMedia","navigator","mediaDevices","getUserMedia","audio","then","handleSuccess","catch","handleError","stream","srcObject","error","console","log","handleSnapshotClick","imgSrc","that","state","videoHeight","videoWidth","getContext","drawImage","drawDetections","isForwarding","toDataURL","analyzeFaces","assertThisInitialized","setTimeout","_ref3","_callee4","faceResults","emotions","_context4","findAndExtractFaces","all","_ref4","classify","loading","_this$state","_this$canvas","d","forSize","forEach","det","_det$box","box","_emotions$i$0$label","react_default","className","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","getElementById","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.c8459983.chunk.js","sourcesContent":["import * as faceapi from 'face-api.js'\n\nconst MODEL_PATH =\n  `${process.env.PUBLIC_URL}/static/models/face/` +\n  'mtcnn_model-weights_manifest.json'\n\nconst PARAMS = {\n  minFaceSize: 50,\n  scaleFactor: 0.709,\n  maxNumScales: 10,\n  scoreThresholds: [0.7, 0.7, 0.7],\n}\n\nexport class FaceExtractor {\n  constructor(path = MODEL_PATH, params = PARAMS) {\n    this.path = path;\n    this.params = params;\n  }\n\n  async load() {\n    this.model = new faceapi.Mtcnn();\n    await this.model.load(this.path);\n  }\n\n  async findFaces(img) {\n    const input = await faceapi.toNetInput(img, false, true);\n    const results = await this.model.forward(input, this.params);\n    const detections = results.map(r => r.faceDetection);\n\n    return { input, detections };\n  }\n\n  async findAndExtractFaces(img) {\n    const { input, detections } = await this.findFaces(img);\n    const faces = await faceapi.extractFaces(input.inputs[0], detections);\n    return { detections, faces };\n  }\n}\n","import * as core from '@tensorflow/tfjs-core'\nimport * as layers from '@tensorflow/tfjs-layers'\n\nexport const tf = { ...core, ...layers }\n","import { tf } from './TF'\n\nconst NORM_OFFSET = tf.scalar(127.5)\n\nexport const prepImg = (img, size) => {\n  // ËΩ¨Êç¢ÊàêÂº†Èáè\n  const imgTensor = tf.fromPixels(img)\n\n  // ‰ªé [0, 255] Ê†áÂáÜÂåñÂà∞ [-1, 1].\n  const normalized = imgTensor\n    .toFloat()\n    .sub(NORM_OFFSET)\n    .div(NORM_OFFSET)\n\n  const { shape } = imgTensor;\n  if (shape[0] === size && shape[1] === size) {\n    return normalized\n  }\n\n  // ÊåâÁÖßÊåáÂÆöÂ§ßÂ∞èË∞ÉÊï¥\n  const alignCorners = true\n  return tf.image.resizeBilinear(normalized, [size, size], alignCorners)\n}\n\nexport const rgbToGrayscale = async imgTensor => {\n  const minTensor = imgTensor.min()\n  const maxTensor = imgTensor.max()\n  const min = (await minTensor.data())[0]\n  const max = (await maxTensor.data())[0]\n  minTensor.dispose()\n  maxTensor.dispose()\n\n  // Normalize to [0, 1]\n  const normalized = imgTensor.sub(tf.scalar(min)).div(tf.scalar(max - min))\n\n  // Compute mean of R, G, and B values\n  let grayscale = normalized.mean(2)\n\n  // Expand dimensions to get proper shape: (h, w, 1)\n  return grayscale.expandDims(2)\n}\n","export const EMOTION = {\n  0: { name: 'ÁîüÊ∞î‰∫ÜÔºÅ', emoji: 'üò†' },\n  1: { name: 'Â•ΩÊÅ∂ÂøÉÔºÅ', emoji: 'ü§¢' },\n  2: { name: 'ÂæàÂÆ≥ÊÄïÔºÅ', emoji: 'üò®' },\n  3: { name: 'ÂæàÂºÄÂøÉÔºÅ', emoji: 'üòÑ' },\n  4: { name: 'ÈöæËøá‰∫ÜÔºÅ', emoji: 'üôÅ' },\n  5: { name: 'ÂæàÊÉäËÆ∂ÔºÅ', emoji: 'üò≤' },\n  6: { name: '‰Ω†Âú®ËØ¥Âï•Ôºü', emoji: 'üòê' },\n}\n\n","import Model from './BaseModel'\nimport * as classes from './constants'\n\nexport class EmotionNet extends Model {\n  constructor() {\n    super({\n      path: `${process.env.PUBLIC_URL}/static/models/emotion/model.json`,\n      imageSize: 48,\n      classes: classes.EMOTION,\n      isGrayscale: true\n    })\n  }\n}\n","import { prepImg, rgbToGrayscale } from './imgUtils'\nimport { tf } from './TF'\n\nclass Model {\n  constructor({ path, imageSize, classes, isGrayscale = false }) {\n    this.path = path\n    this.imageSize = imageSize\n    this.classes = classes\n    this.isGrayscale = isGrayscale\n  }\n\n  async load() {\n    this.model = await tf.loadModel(this.path)\n\n    // È¢ÑÁÉ≠‰∏Ä‰∏ã\n    const inShape = this.model.inputs[0].shape.slice(1)\n    const result = tf.tidy(() => this.model.predict(tf.zeros([1, ...inShape])))\n    await result.data()\n    result.dispose()\n  }\n\n  async imgToInputs(img) {\n    // Convert to tensor & resize if necessary\n    let norm = await prepImg(img, this.imageSize)\n\n    // TODO: infer whether this is needed based on model & img shapes\n    if (this.isGrayscale) {\n      norm = await rgbToGrayscale(norm)\n    }\n\n    // Reshape to a single-element batch so we can pass it to predict.\n    return norm.reshape([1, ...norm.shape])\n  }\n\n  async classify(img, topK = 10) {\n    const inputs = await this.imgToInputs(img)\n    const logits = this.model.predict(inputs)\n    const classes = await this.getTopKClasses(logits, topK)\n    return classes\n  }\n\n  async getTopKClasses(logits, topK = 10) {\n    const values = await logits.data()\n    let predictionList = []\n\n    for (let i = 0; i < values.length; i++) {\n      predictionList.push({ value: values[i], index: i })\n    }\n\n    predictionList = predictionList\n      .sort((a, b) => b.value - a.value)\n      .slice(0, topK)\n\n    return predictionList.map(x => {\n      return { label: this.classes[x.index], value: x.value }\n    })\n  }\n}\n\nexport default Model\n","export const getImg = src =>\n  new Promise(resolve => {\n    const img = new Image()\n    img.src = src\n    img.crossOrigin = '*'\n    img.onload = () => resolve(img)\n  })\n\nexport const nextFrame = () =>\n  new Promise(resolve => {\n    requestAnimationFrame(() => requestAnimationFrame(() => resolve()))\n  })\n\nexport const EmojiToColor = {\n  'üò†': '#ff0000',\n  'ü§¢': '#32cd32',\n  'üò®': '#4169e1',\n  'üòÑ': '#ff6347',\n  'üôÅ': '#696969',\n  'üò≤': '#ffd700',\n  'üòê': '#fff',\n}\n\nexport const drawBox = ({ ctx, x, y, width, height, emoji }) => {\n  ctx.strokeStyle = EmojiToColor[emoji];\n  ctx.lineWidth = '3';\n  ctx.strokeRect(x, y, width, height);\n}\n\nexport const drawText = ({ ctx, x, y, text, name }) => {\n  const padding = 4\n  ctx.fillStyle = '#ff6347'\n  ctx.font = '16px'\n  ctx.textBaseline = 'top'\n  ctx.fillText(text, x + padding, y + padding)\n}\n","export const MOBILE_DEVICE_WIDTH = 375;","import React, { Component } from 'react';\nimport './App.css';\n\nimport { FaceExtractor } from './models/FaceExtractor'\nimport { EmotionNet } from './models/Model'\nimport { getImg, drawBox, nextFrame, drawText } from './util'\n\nimport { MOBILE_DEVICE_WIDTH } from './constants';\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      ready: false,\n      detections: [],\n      \n    }\n    this.isForwarding = false;\n    this.stream = null;\n    this.video = null;\n    this.canvas = null;\n    this.MOBILE_DEVICE_WIDTH = MOBILE_DEVICE_WIDTH;\n  }\n\n  componentDidMount() {\n    this.initModels();\n    this.initVideo();\n    this.initCanvas();\n    this.startMedia();\n  }\n\n  initModels = async () => {\n    const faceModel = new FaceExtractor();\n    await faceModel.load();\n\n    const emotionModel = new EmotionNet();\n    await emotionModel.load();\n\n    this.models = { face: faceModel, emotion: emotionModel };\n    this.setState({ ready: true });\n  }\n\n  initVideo = () => {\n    this.video = document.createElement('video');\n    this.video.autoplay = true;\n    this.video.playsinline = true;\n    this.video.style.display = 'none';\n  }\n\n  initCanvas = () => {\n    this.canvas = document.querySelector('canvas');\n    this.canvas.width = 0;\n    this.canvas.height = 0;\n  }\n\n  startMedia = () => {\n    const constraints = {\n      audio: false,\n      video: true\n    };\n    navigator.mediaDevices.getUserMedia(constraints)\n      .then(this.handleSuccess)\n      .catch(this.handleError);\n  }\n\n  handleSuccess = (stream) => {\n    this.stream = stream; // Ëé∑ÂèñËßÜÈ¢ëÊµÅ\n    this.video.srcObject = stream; // ‰º†Áªô video\n  }\n  \n  handleError = (error) => {\n    console.log('navigator.getUserMedia error: ', error);\n  }\n\n  handleSnapshotClick = async () => {\n    if (!this.state.ready) return;\n    const canvas = this.canvas;\n    const video = this.video;\n    canvas.width = this.MOBILE_DEVICE_WIDTH;\n    canvas.height = video.videoHeight * this.MOBILE_DEVICE_WIDTH / video.videoWidth;\n    canvas.getContext('2d').drawImage(video, 0, 0, canvas.width, canvas.height);\n    this.drawDetections();\n    \n    if (!this.isForwarding) {\n      this.isForwarding = true;\n      const imgSrc = await getImg(canvas.toDataURL('image/png'));\n      this.analyzeFaces(imgSrc);\n    }\n\n    const that = this;\n    setTimeout(() => {\n      that.handleSnapshotClick();\n    }, 10);\n  }\n\n  analyzeFaces = async (img) => {\n    await nextFrame();\n\n    if (!this.models) return;\n    const faceResults = await this.models.face.findAndExtractFaces(img);\n    const { detections, faces } = faceResults;\n\n    // get emotion predictions\n    let emotions = await Promise.all(\n      faces.map(async face => await this.models.emotion.classify(face))\n    );\n    this.setState(\n      { loading: false, detections, faces, emotions },\n      () => {\n        this.isForwarding = false;\n      }\n    );\n  }\n\n  drawDetections = () => {\n    const { detections, emotions } = this.state;\n    if (!detections.length) return;\n\n    const { width, height } = this.canvas;\n\n    const ctx = this.canvas.getContext('2d');\n    const detectionsResized = detections.map(d => d.forSize(width, height));\n    detectionsResized.forEach((det, i) => {\n      const { x, y } = det.box\n      const { emoji, name } = emotions[i][0].label;\n      drawBox({ ctx, ...det.box, emoji });\n      drawText({ ctx, x, y, text: emoji, name });\n    });\n  }\n\n  render() {\n    const { ready } = this.state;\n    return (\n      <div className=\"App\">\n        <div>{ ready ? 'ÂáÜÂ§áÂ∞±Áª™' : 'Âä†ËΩΩÊ®°Âûã...'}</div>\n        <button className=\"btn\" onClick={this.handleSnapshotClick}>Begin ~</button>\n        <canvas></canvas>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport adapter from 'webrtc-adapter';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}